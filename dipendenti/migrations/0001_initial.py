# Generated by Django 4.2.21 on 2025-05-14 01:35

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Dipendente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('livello', models.CharField(choices=[('totale', 'Amministratore completo'), ('contabile', 'Gestione contabilità'), ('operativo', 'Gestione operativa'), ('operatore', 'Operatore base'), ('rappresentante', 'Rappresentante commerciale')], default='operatore', max_length=30, verbose_name='Livello autorizzazioni')),
                ('indirizzo', models.CharField(blank=True, max_length=500, null=True, verbose_name='Indirizzo')),
                ('telefono', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefono')),
                ('data_nascita', models.DateField(blank=True, null=True, verbose_name='Data di nascita')),
                ('data_assunzione', models.DateField(blank=True, null=True, verbose_name='Data di assunzione')),
                ('CF', models.CharField(blank=True, max_length=16, null=True, verbose_name='Codice Fiscale')),
                ('carta_d_identità', models.CharField(blank=True, max_length=200, null=True, verbose_name='Numero della carta di identità')),
                ('data_scadenza_ci', models.DateField(blank=True, null=True, verbose_name='Scadenza carta identità')),
                ('patente_di_guida', models.CharField(blank=True, max_length=200, null=True, verbose_name='Numero della patente di guida')),
                ('data_scadenza_patente', models.DateField(blank=True, null=True, verbose_name='Scadenza patente')),
                ('categorie_patente', models.CharField(blank=True, max_length=20, null=True, verbose_name='Categorie patente')),
                ('posizione_inail', models.CharField(blank=True, max_length=200, null=True, verbose_name='Posizione INAIL')),
                ('posizione_inps', models.CharField(blank=True, max_length=200, null=True, verbose_name='Posizione INPS')),
                ('foto_dipendente', models.ImageField(blank=True, null=True, upload_to='dipendenti/foto', verbose_name='Foto dipendente')),
                ('foto_carta_identità', models.ImageField(blank=True, null=True, upload_to='dipendenti/documenti', verbose_name='Foto carta identità')),
                ('foto_codice_fiscale', models.ImageField(blank=True, null=True, upload_to='dipendenti/documenti', verbose_name='Foto codice fiscale')),
                ('foto_patente', models.ImageField(blank=True, null=True, upload_to='dipendenti/documenti', verbose_name='Foto patente')),
                ('note', models.TextField(blank=True, max_length=4000, null=True, verbose_name='Note')),
                ('is_online', models.BooleanField(default=False, help_text='Indica se il dipendente è attualmente online', verbose_name='Online')),
                ('ultimo_accesso', models.DateTimeField(blank=True, null=True, verbose_name='Ultimo accesso')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Dipendente',
                'verbose_name_plural': 'Dipendenti',
                'ordering': ['username'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AllegatoDipendente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('contratto', 'Contratto di lavoro'), ('privacy', 'Informativa Privacy'), ('sicurezza', 'Documenti Sicurezza'), ('formazione', 'Attestati Formazione'), ('altro', 'Altro documento')], default='altro', max_length=20, verbose_name='Tipo documento')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome documento')),
                ('file', models.FileField(upload_to='dipendenti/allegati', verbose_name='File')),
                ('data_caricamento', models.DateTimeField(auto_now_add=True, verbose_name='Data caricamento')),
                ('visibile_al_dipendente', models.BooleanField(default=True, verbose_name='Visibile al dipendente')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Note')),
                ('dipendente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='allegati', to=settings.AUTH_USER_MODEL, verbose_name='Dipendente')),
            ],
            options={
                'verbose_name': 'Allegato dipendente',
                'verbose_name_plural': 'Allegati dipendente',
                'ordering': ['-data_caricamento'],
            },
        ),
        migrations.CreateModel(
            name='Giornata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField(auto_now_add=True, verbose_name='Data')),
                ('ora_inizio_mattina', models.TimeField(blank=True, null=True, verbose_name='Inizio mattina')),
                ('ora_fine_mattina', models.TimeField(blank=True, null=True, verbose_name='Fine mattina')),
                ('ora_inizio_pomeriggio', models.TimeField(blank=True, null=True, verbose_name='Inizio pomeriggio')),
                ('ora_fine_pomeriggio', models.TimeField(blank=True, null=True, verbose_name='Fine pomeriggio')),
                ('assenza', models.CharField(choices=[('nessuna', 'Nessuna assenza'), ('ferie', 'Ferie'), ('malattia', 'Malattia'), ('permesso', 'Permesso'), ('altro', 'Altro')], default='nessuna', max_length=20, verbose_name='Tipo assenza')),
                ('nota_assenza', models.TextField(blank=True, null=True, verbose_name='Note assenza')),
                ('chiudi_giornata', models.BooleanField(default=False, verbose_name='Giornata chiusa')),
                ('confermata', models.BooleanField(default=False, verbose_name='Confermata')),
                ('confermata_da', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='giornate_confermate', to=settings.AUTH_USER_MODEL, verbose_name='Confermata da')),
                ('operatore', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='giornate', to=settings.AUTH_USER_MODEL, verbose_name='Operatore')),
            ],
            options={
                'verbose_name': 'Giornata lavorativa',
                'verbose_name_plural': 'Giornate lavorative',
                'ordering': ['-data'],
                'unique_together': {('operatore', 'data')},
            },
        ),
    ]
